// Generated by CoffeeScript 1.6.3
(function() {
  var Abuse, Entity, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Entity = require('../Entity').Entity;

  Abuse = (function(_super) {
    __extends(Abuse, _super);

    function Abuse() {
      this.getAllAbuses = __bind(this.getAllAbuses, this);
      _ref = Abuse.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Abuse.prototype.getAllAbuses = function(fn) {
      return this.call('abuse', fn);
    };

    return Abuse;

  })(Entity);

  module.exports = Abuse;

}).call(this);
